/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-jsf2-spring-conversation:src/main/java/domain/SearchForm.e.vm.java
 */
package br.com.aj2.web.domain;

import static br.com.aj2.dao.support.PropertySelector.newPropertySelector;
import static br.com.aj2.dao.support.Ranges.RangeDate.newRangeDate;
import javax.inject.Named;
import br.com.aj2.dao.support.PropertySelector;
import br.com.aj2.dao.support.Ranges.RangeDate;
import br.com.aj2.dao.support.SearchParameters;
import br.com.aj2.domain.Empresa;
import br.com.aj2.domain.Empresa_;
import br.com.aj2.enumTypes.TipoPessoa;
import br.com.aj2.enumTypes.UF;
import br.com.aj2.web.domain.support.GenericSearchForm;
import br.com.aj2.web.faces.ConversationContextScoped;

/**
 * View Helper to search {@link Empresa}.
 * It exposes a {@link Empresa} instance so it can be used in search by Example query.
 */
@Named
@ConversationContextScoped
public class EmpresaSearchForm extends GenericSearchForm<Empresa, Integer, EmpresaSearchForm> {
    private static final long serialVersionUID = 1L;

    protected Empresa empresa = new Empresa();
    protected RangeDate<Empresa> expiredateRange = newRangeDate(Empresa_.expiredate);
    protected PropertySelector<Empresa, String> razaosocialSelector = newPropertySelector(Empresa_.razaosocial);
    protected PropertySelector<Empresa, String> cnpjSelector = newPropertySelector(Empresa_.cnpj);
    protected PropertySelector<Empresa, String> ieSelector = newPropertySelector(Empresa_.ie);
    protected PropertySelector<Empresa, String> nomeFantasiaSelector = newPropertySelector(Empresa_.nomeFantasia);
    protected PropertySelector<Empresa, String> siglaSelector = newPropertySelector(Empresa_.sigla);
    protected PropertySelector<Empresa, String> telefoneSelector = newPropertySelector(Empresa_.telefone);
    protected PropertySelector<Empresa, String> faxSelector = newPropertySelector(Empresa_.fax);
    protected PropertySelector<Empresa, String> facebookSelector = newPropertySelector(Empresa_.facebook);
    protected PropertySelector<Empresa, String> siteSelector = newPropertySelector(Empresa_.site);
    protected PropertySelector<Empresa, String> emailSelector = newPropertySelector(Empresa_.email);
    protected PropertySelector<Empresa, String> logradouroSelector = newPropertySelector(Empresa_.logradouro);
    protected PropertySelector<Empresa, String> complementoSelector = newPropertySelector(Empresa_.complemento);
    protected PropertySelector<Empresa, String> numeroSelector = newPropertySelector(Empresa_.numero);
    protected PropertySelector<Empresa, String> bairroSelector = newPropertySelector(Empresa_.bairro);
    protected PropertySelector<Empresa, String> cidadeSelector = newPropertySelector(Empresa_.cidade);
    protected PropertySelector<Empresa, UF> ufSelector = newPropertySelector(Empresa_.uf);
    protected PropertySelector<Empresa, String> cepSelector = newPropertySelector(Empresa_.cep);
    protected PropertySelector<Empresa, String> serialhdSelector = newPropertySelector(Empresa_.serialhd);
    protected PropertySelector<Empresa, Boolean> ativoSelector = newPropertySelector(Empresa_.ativo);
    protected PropertySelector<Empresa, String> planoSelector = newPropertySelector(Empresa_.plano);
    protected PropertySelector<Empresa, String> logoSelector = newPropertySelector(Empresa_.logo);
    protected PropertySelector<Empresa, TipoPessoa> tipoPessoaSelector = newPropertySelector(Empresa_.tipoPessoa);
    protected PropertySelector<Empresa, String> botonrelatorioSelector = newPropertySelector(Empresa_.botonrelatorio);
    protected PropertySelector<Empresa, String> logomarcaFileNameSelector = newPropertySelector(Empresa_.logomarcaFileName);
    protected PropertySelector<Empresa, String> logomarcaContentTypeSelector = newPropertySelector(Empresa_.logomarcaContentType);

    public Empresa getEmpresa() {
        return empresa;
    }

    @Override
    protected Empresa getEntity() {
        return getEmpresa();
    }

    @Override
    public EmpresaSearchForm newInstance() {
        return new EmpresaSearchForm();
    }

    @Override
    public SearchParameters toSearchParameters() {
        return new SearchParameters() //
                .anywhere() //
                .range(expiredateRange) //
                .property(razaosocialSelector) //
                .property(cnpjSelector) //
                .property(ieSelector) //
                .property(nomeFantasiaSelector) //
                .property(siglaSelector) //
                .property(telefoneSelector) //
                .property(faxSelector) //
                .property(facebookSelector) //
                .property(siteSelector) //
                .property(emailSelector) //
                .property(logradouroSelector) //
                .property(complementoSelector) //
                .property(numeroSelector) //
                .property(bairroSelector) //
                .property(cidadeSelector) //
                .property(ufSelector) //
                .property(cepSelector) //
                .property(serialhdSelector) //
                .property(ativoSelector) //
                .property(planoSelector) //
                .property(logoSelector) //
                .property(tipoPessoaSelector) //
                .property(botonrelatorioSelector) //
                .property(logomarcaFileNameSelector) //
                .property(logomarcaContentTypeSelector) //
        ;
    }

    @Override
    public void resetWithOther(EmpresaSearchForm other) {
        this.empresa = other.getEmpresa();
        this.expiredateRange = other.getExpiredateRange();
        this.razaosocialSelector = other.getRazaosocialSelector();
        this.cnpjSelector = other.getCnpjSelector();
        this.ieSelector = other.getIeSelector();
        this.nomeFantasiaSelector = other.getNomeFantasiaSelector();
        this.siglaSelector = other.getSiglaSelector();
        this.telefoneSelector = other.getTelefoneSelector();
        this.faxSelector = other.getFaxSelector();
        this.facebookSelector = other.getFacebookSelector();
        this.siteSelector = other.getSiteSelector();
        this.emailSelector = other.getEmailSelector();
        this.logradouroSelector = other.getLogradouroSelector();
        this.complementoSelector = other.getComplementoSelector();
        this.numeroSelector = other.getNumeroSelector();
        this.bairroSelector = other.getBairroSelector();
        this.cidadeSelector = other.getCidadeSelector();
        this.ufSelector = other.getUfSelector();
        this.cepSelector = other.getCepSelector();
        this.serialhdSelector = other.getSerialhdSelector();
        this.ativoSelector = other.getAtivoSelector();
        this.planoSelector = other.getPlanoSelector();
        this.logoSelector = other.getLogoSelector();
        this.tipoPessoaSelector = other.getTipoPessoaSelector();
        this.botonrelatorioSelector = other.getBotonrelatorioSelector();
        this.logomarcaFileNameSelector = other.getLogomarcaFileNameSelector();
        this.logomarcaContentTypeSelector = other.getLogomarcaContentTypeSelector();
    }

    // Ranges
    public RangeDate<Empresa> getExpiredateRange() {
        return expiredateRange;
    }

    // Property selectors
    public PropertySelector<Empresa, String> getRazaosocialSelector() {
        return razaosocialSelector;
    }

    public PropertySelector<Empresa, String> getCnpjSelector() {
        return cnpjSelector;
    }

    public PropertySelector<Empresa, String> getIeSelector() {
        return ieSelector;
    }

    public PropertySelector<Empresa, String> getNomeFantasiaSelector() {
        return nomeFantasiaSelector;
    }

    public PropertySelector<Empresa, String> getSiglaSelector() {
        return siglaSelector;
    }

    public PropertySelector<Empresa, String> getTelefoneSelector() {
        return telefoneSelector;
    }

    public PropertySelector<Empresa, String> getFaxSelector() {
        return faxSelector;
    }

    public PropertySelector<Empresa, String> getFacebookSelector() {
        return facebookSelector;
    }

    public PropertySelector<Empresa, String> getSiteSelector() {
        return siteSelector;
    }

    public PropertySelector<Empresa, String> getEmailSelector() {
        return emailSelector;
    }

    public PropertySelector<Empresa, String> getLogradouroSelector() {
        return logradouroSelector;
    }

    public PropertySelector<Empresa, String> getComplementoSelector() {
        return complementoSelector;
    }

    public PropertySelector<Empresa, String> getNumeroSelector() {
        return numeroSelector;
    }

    public PropertySelector<Empresa, String> getBairroSelector() {
        return bairroSelector;
    }

    public PropertySelector<Empresa, String> getCidadeSelector() {
        return cidadeSelector;
    }

    public PropertySelector<Empresa, UF> getUfSelector() {
        return ufSelector;
    }

    public PropertySelector<Empresa, String> getCepSelector() {
        return cepSelector;
    }

    public PropertySelector<Empresa, String> getSerialhdSelector() {
        return serialhdSelector;
    }

    public PropertySelector<Empresa, Boolean> getAtivoSelector() {
        return ativoSelector;
    }

    public PropertySelector<Empresa, String> getPlanoSelector() {
        return planoSelector;
    }

    public PropertySelector<Empresa, String> getLogoSelector() {
        return logoSelector;
    }

    public PropertySelector<Empresa, TipoPessoa> getTipoPessoaSelector() {
        return tipoPessoaSelector;
    }

    public PropertySelector<Empresa, String> getBotonrelatorioSelector() {
        return botonrelatorioSelector;
    }

    public PropertySelector<Empresa, String> getLogomarcaFileNameSelector() {
        return logomarcaFileNameSelector;
    }

    public PropertySelector<Empresa, String> getLogomarcaContentTypeSelector() {
        return logomarcaContentTypeSelector;
    }
}
