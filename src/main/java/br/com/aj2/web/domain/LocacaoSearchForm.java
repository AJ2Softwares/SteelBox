/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-jsf2-spring-conversation:src/main/java/domain/SearchForm.e.vm.java
 */
package br.com.aj2.web.domain;

import static br.com.aj2.dao.support.EntitySelector.newEntitySelector;
import static br.com.aj2.dao.support.PropertySelector.newPropertySelector;
import static br.com.aj2.dao.support.Ranges.RangeDate.newRangeDate;
import static br.com.aj2.dao.support.Ranges.RangeDouble.newRangeDouble;
import javax.inject.Named;
import br.com.aj2.dao.support.EntitySelector;
import br.com.aj2.dao.support.PropertySelector;
import br.com.aj2.dao.support.Ranges.RangeDate;
import br.com.aj2.dao.support.Ranges.RangeDouble;
import br.com.aj2.dao.support.SearchParameters;
import br.com.aj2.domain.Cliente;
import br.com.aj2.domain.Estudios;
import br.com.aj2.domain.Locacao;
import br.com.aj2.domain.Locacao_;
import br.com.aj2.enumTypes.FormaPagamento;
import br.com.aj2.enumTypes.StatusLocacao;
import br.com.aj2.web.domain.support.GenericSearchForm;
import br.com.aj2.web.faces.ConversationContextScoped;

/**
 * View Helper to search {@link Locacao}.
 * It exposes a {@link Locacao} instance so it can be used in search by Example query.
 */
@Named
@ConversationContextScoped
public class LocacaoSearchForm extends GenericSearchForm<Locacao, Integer, LocacaoSearchForm> {
    private static final long serialVersionUID = 1L;

    protected Locacao locacao = new Locacao();
    protected RangeDate<Locacao> dataRange = newRangeDate(Locacao_.data);
    protected RangeDouble<Locacao> valorRange = newRangeDouble(Locacao_.valor);
    protected PropertySelector<Locacao, String> horaSelector = newPropertySelector(Locacao_.hora);
    protected PropertySelector<Locacao, String> qtdHorasSelector = newPropertySelector(Locacao_.qtdHoras);
    protected PropertySelector<Locacao, Double> valorSelector = newPropertySelector(Locacao_.valor);
    protected PropertySelector<Locacao, Boolean> pagoSelector = newPropertySelector(Locacao_.pago);
    protected PropertySelector<Locacao, FormaPagamento> formaPagamentoSelector = newPropertySelector(Locacao_.formaPagamento);
    protected PropertySelector<Locacao, String> obsduranteousoSelector = newPropertySelector(Locacao_.obsduranteouso);
    protected PropertySelector<Locacao, StatusLocacao> statusSelector = newPropertySelector(Locacao_.status);
    protected PropertySelector<Locacao, String> descriptionSelector = newPropertySelector(Locacao_.description);
    protected EntitySelector<Locacao, Estudios, Integer> estudiosSelector = newEntitySelector(Locacao_.estudios);
    protected EntitySelector<Locacao, Cliente, Integer> clienteSelector = newEntitySelector(Locacao_.cliente);

    public Locacao getLocacao() {
        return locacao;
    }

    @Override
    protected Locacao getEntity() {
        return getLocacao();
    }

    @Override
    public LocacaoSearchForm newInstance() {
        return new LocacaoSearchForm();
    }

    @Override
    public SearchParameters toSearchParameters() {
        return new SearchParameters() //
                .anywhere() //
                .range(dataRange) //
                .range(valorRange) //
                .property(horaSelector) //
                .property(qtdHorasSelector) //
                .property(valorSelector) //
                .property(pagoSelector) //
                .property(formaPagamentoSelector) //
                .property(obsduranteousoSelector) //
                .property(statusSelector) //
                .property(descriptionSelector) //
                .entity(estudiosSelector) //
                .entity(clienteSelector) //
        ;
    }

    @Override
    public void resetWithOther(LocacaoSearchForm other) {
        this.locacao = other.getLocacao();
        this.dataRange = other.getDataRange();
        this.valorRange = other.getValorRange();
        this.horaSelector = other.getHoraSelector();
        this.qtdHorasSelector = other.getQtdHorasSelector();
        this.valorSelector = other.getValorSelector();
        this.pagoSelector = other.getPagoSelector();
        this.formaPagamentoSelector = other.getFormaPagamentoSelector();
        this.obsduranteousoSelector = other.getObsduranteousoSelector();
        this.statusSelector = other.getStatusSelector();
        this.descriptionSelector = other.getDescriptionSelector();
        this.estudiosSelector = other.getEstudiosSelector();
        this.clienteSelector = other.getClienteSelector();
    }

    // Ranges
    public RangeDate<Locacao> getDataRange() {
        return dataRange;
    }

    public RangeDouble<Locacao> getValorRange() {
        return valorRange;
    }

    // Property selectors
    public PropertySelector<Locacao, String> getHoraSelector() {
        return horaSelector;
    }

    public PropertySelector<Locacao, String> getQtdHorasSelector() {
        return qtdHorasSelector;
    }

    public PropertySelector<Locacao, Double> getValorSelector() {
        return valorSelector;
    }

    public PropertySelector<Locacao, Boolean> getPagoSelector() {
        return pagoSelector;
    }

    public PropertySelector<Locacao, FormaPagamento> getFormaPagamentoSelector() {
        return formaPagamentoSelector;
    }

    public PropertySelector<Locacao, String> getObsduranteousoSelector() {
        return obsduranteousoSelector;
    }

    public PropertySelector<Locacao, StatusLocacao> getStatusSelector() {
        return statusSelector;
    }

    public PropertySelector<Locacao, String> getDescriptionSelector() {
        return descriptionSelector;
    }

    // Relation selectors
    public EntitySelector<Locacao, Estudios, Integer> getEstudiosSelector() {
        return estudiosSelector;
    }

    public EntitySelector<Locacao, Cliente, Integer> getClienteSelector() {
        return clienteSelector;
    }
}
