--
-- (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
-- Source code generated by Celerio, a Jaxio product
-- Want to use Celerio within your company? email us at info@jaxio.com
-- Follow us on twitter: @springfuse
-- Template pack-backend-jpa:src/main/sql/h2/01-create.p.vm.sql
--
DROP ALL objects;

CREATE TABLE account (
	id INTEGER(10) not null
	,login VARCHAR(100) not null
	,password VARCHAR(100) not null
	,email VARCHAR(100) not null
	,is_enabled BIT
	,civility VARCHAR(10)
	,first_name VARCHAR(100)
	,last_name VARCHAR(100)
	,birth_date TIMESTAMP not null
	,description VARCHAR(255)
	,creation_date TIMESTAMP
	,creation_author VARCHAR(200)
	,last_modification_date TIMESTAMP
	,last_modification_author VARCHAR(200)
	,version INTEGER(10) default 0
	,avatar_file_name VARCHAR(255)
	,avatar_content_type VARCHAR(255)
	,avatar_binary LONGVARBINARY(2147483647)
);
CREATE UNIQUE INDEX IF NOT EXISTS account_unique_2
	ON account (email);
CREATE UNIQUE INDEX IF NOT EXISTS account_unique_1
	ON account (login);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY
	ON account (id);
ALTER TABLE account ALTER COLUMN id IDENTITY;

CREATE TABLE account_has_role (
	ACCOUNT_id INTEGER(10) not null
	,ROLE_id INTEGER(10) not null
);
CREATE INDEX IF NOT EXISTS fk_ACCOUNT_has_ROLE_ROLE1
	ON account_has_role (ROLE_id);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY
	ON account_has_role (ACCOUNT_id,ROLE_id);
CREATE INDEX IF NOT EXISTS fk_ACCOUNT_has_ROLE_ACCOUNT1
	ON account_has_role (ACCOUNT_id);
CREATE PRIMARY KEY 
	ON account_has_role (ACCOUNT_id,ROLE_id);

CREATE TABLE agenda (
	id INTEGER(10) not null
	,evento VARCHAR(255) not null
	,data DATE not null
	,hora VARCHAR(10) not null
	,arquivo_file_name VARCHAR(255)
	,descricao LONGVARCHAR(65535)
	,arquivo_binary LONGVARBINARY(2147483647)
	,arquivo_content_type VARCHAR(255)
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY
	ON agenda (id);
ALTER TABLE agenda ALTER COLUMN id IDENTITY;

CREATE TABLE cliente (
	id INTEGER(10) not null
	,nome VARCHAR(100) not null
	,sexo VARCHAR(10)
	,data_nascimento DATE
	,estado_civil VARCHAR(10)
	,cpf_cnpj VARCHAR(45) not null
	,rg_ie VARCHAR(45)
	,tipo_pessoa VARCHAR(10) not null
	,logradouro VARCHAR(45)
	,numero VARCHAR(10)
	,complemento VARCHAR(45)
	,bairro VARCHAR(100)
	,cidade VARCHAR(100)
	,uf VARCHAR(2)
	,pais VARCHAR(45)
	,cep VARCHAR(10)
	,telefone VARCHAR(20)
	,fax VARCHAR(20)
	,celular VARCHAR(20)
	,email VARCHAR(100)
	,facebook VARCHAR(45)
	,skype VARCHAR(45)
	,msn VARCHAR(100)
	,site VARCHAR(100)
	,creation_date TIMESTAMP
	,last_modification_author VARCHAR(200)
	,last_modification_date TIMESTAMP
	,creation_author VARCHAR(200)
	,description VARCHAR(45)
	,GrupoCliente_id INTEGER(10)
);
CREATE UNIQUE INDEX IF NOT EXISTS cliente_unique_1
	ON cliente (cpf_cnpj);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY
	ON cliente (id);
CREATE UNIQUE INDEX IF NOT EXISTS email_UNIQUE
	ON cliente (email);
CREATE INDEX IF NOT EXISTS fk_cliente_GrupoCliente1_idx
	ON cliente (GrupoCliente_id);
ALTER TABLE cliente ALTER COLUMN id IDENTITY;

CREATE TABLE empresa (
	id INTEGER(10) not null
	,RazaoSocial VARCHAR(50) not null
	,cnpj VARCHAR(20) not null
	,ie VARCHAR(20)
	,nome_fantasia VARCHAR(20)
	,sigla VARCHAR(10)
	,telefone VARCHAR(20)
	,fax VARCHAR(20)
	,facebook VARCHAR(20)
	,site VARCHAR(45)
	,email VARCHAR(200) not null
	,logradouro VARCHAR(100)
	,complemento VARCHAR(50)
	,numero VARCHAR(10)
	,bairro VARCHAR(100)
	,cidade VARCHAR(100)
	,uf VARCHAR(2)
	,cep VARCHAR(20)
	,expireDate DATE
	,serialHd VARCHAR(45)
	,ativo BIT
	,plano VARCHAR(45)
	,logo VARCHAR(255)
	,tipo_pessoa VARCHAR(10) not null
	,botonRelatorio LONGVARCHAR(2147483647)
	,logomarca_binary LONGVARBINARY(65535)
	,logomarca_file_name VARCHAR(255)
	,logomarca_content_type VARCHAR(255)
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY
	ON empresa (id);
CREATE UNIQUE INDEX IF NOT EXISTS email_UNIQUE
	ON empresa (email);
CREATE UNIQUE INDEX IF NOT EXISTS ativo_UNIQUE
	ON empresa (ativo);
CREATE UNIQUE INDEX IF NOT EXISTS RazaoSocial_UNIQUE
	ON empresa (RazaoSocial);
CREATE UNIQUE INDEX IF NOT EXISTS empresa_unique_1
	ON empresa (cnpj);
ALTER TABLE empresa ALTER COLUMN id IDENTITY;

CREATE TABLE equipamentos (
	id INTEGER(10) not null
	,descricao VARCHAR(100) not null
	,tipo_equipamento_id INTEGER(10) not null
	,valor DOUBLE(22)
	,data_aquisacao DATE
	,ativo BIT
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY
	ON equipamentos (id);
CREATE INDEX IF NOT EXISTS fk_equipamentos_tipo_equipamento1
	ON equipamentos (tipo_equipamento_id);
CREATE UNIQUE INDEX IF NOT EXISTS descricao_UNIQUE
	ON equipamentos (descricao);
ALTER TABLE equipamentos ALTER COLUMN id IDENTITY;

CREATE TABLE equipamentos_has_estudios (
	equipamentos_id INTEGER(10) not null
	,estudios_id INTEGER(10) not null
);
CREATE INDEX IF NOT EXISTS fk_equipamentos_has_estudios_estudios1
	ON equipamentos_has_estudios (estudios_id);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY
	ON equipamentos_has_estudios (equipamentos_id,estudios_id);
CREATE INDEX IF NOT EXISTS fk_equipamentos_has_estudios_equipamentos1
	ON equipamentos_has_estudios (equipamentos_id);
CREATE PRIMARY KEY 
	ON equipamentos_has_estudios (equipamentos_id,estudios_id);

CREATE TABLE estudios (
	id INTEGER(10) not null
	,nome VARCHAR(45) not null
	,ativo BIT
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY
	ON estudios (id);
CREATE UNIQUE INDEX IF NOT EXISTS nome_UNIQUE
	ON estudios (nome);
ALTER TABLE estudios ALTER COLUMN id IDENTITY;

CREATE TABLE grupocliente (
	id INTEGER(10) not null
	,Nome VARCHAR(45)
	,cliente_Representante_id INTEGER(10) not null
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY
	ON grupocliente (id);
CREATE UNIQUE INDEX IF NOT EXISTS Nome_UNIQUE
	ON grupocliente (Nome);
CREATE UNIQUE INDEX IF NOT EXISTS cliente_Representante_id_UNIQUE
	ON grupocliente (cliente_Representante_id);
CREATE INDEX IF NOT EXISTS fk_GrupoCliente_cliente1_idx
	ON grupocliente (cliente_Representante_id);
ALTER TABLE grupocliente ALTER COLUMN id IDENTITY;

CREATE TABLE itens_os (
	id INTEGER(10) not null
	,os_id INTEGER(10) not null
	,servicos_id INTEGER(10) not null
	,valor DOUBLE(22)
	,desconto DOUBLE(22)
	,quantidade INTEGER(10)
	,adicionais DOUBLE(22)
	,total DOUBLE(22)
);
CREATE INDEX IF NOT EXISTS fk_itens_os_servico
	ON itens_os (servicos_id);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY
	ON itens_os (id);
CREATE INDEX IF NOT EXISTS fk_itens_os_Os
	ON itens_os (os_id);
ALTER TABLE itens_os ALTER COLUMN id IDENTITY;

CREATE TABLE lancamentos (
	id INTEGER(10) not null
	,descricao LONGVARCHAR(65535) not null
	,documento VARCHAR(200)
	,tipo VARCHAR(15)
	,status VARCHAR(15)
	,data_vencimento DATE
	,data_pagamento DATE
	,valor DOUBLE(22) not null
	,valor_pago DOUBLE(22)
	,creation_date TIMESTAMP
	,last_modification_author VARCHAR(200)
	,last_modification_date TIMESTAMP
	,creation_author VARCHAR(200)
	,description VARCHAR(255)
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY
	ON lancamentos (id);
ALTER TABLE lancamentos ALTER COLUMN id IDENTITY;

CREATE TABLE locacao (
	id INTEGER(10) not null
	,cliente_id INTEGER(10) not null
	,data DATE
	,hora VARCHAR(45)
	,qtd_horas VARCHAR(45)
	,valor DOUBLE(22)
	,pago BIT
	,forma_pagamento VARCHAR(45)
	,estudios_id INTEGER(10) not null
	,obsduranteouso LONGVARCHAR(65535)
	,creation_date TIMESTAMP
	,last_modification_author VARCHAR(200)
	,last_modification_date TIMESTAMP
	,creation_author VARCHAR(200)
	,status VARCHAR(45)
	,description VARCHAR(45)
);
CREATE INDEX IF NOT EXISTS cliente_id
	ON locacao (cliente_id);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY
	ON locacao (id);
CREATE INDEX IF NOT EXISTS fk_locacao_estudios
	ON locacao (estudios_id);
ALTER TABLE locacao ALTER COLUMN id IDENTITY;

CREATE TABLE os (
	id INTEGER(10) not null
	,cliente_id INTEGER(10) not null
	,produtor_id INTEGER(10) not null
	,status VARCHAR(45)
	,data_atendimento DATE
	,data_conclusao DATE
	,data_venciemento DATE
	,forma_pagamento VARCHAR(45)
	,creation_date TIMESTAMP
	,last_modification_author VARCHAR(200)
	,last_modification_date TIMESTAMP
	,creation_author VARCHAR(200)
	,description VARCHAR(45)
	,total DOUBLE(22)
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY
	ON os (id);
CREATE INDEX IF NOT EXISTS fk_os_cliente
	ON os (cliente_id);
CREATE INDEX IF NOT EXISTS fk_os_produtor1
	ON os (produtor_id);
ALTER TABLE os ALTER COLUMN id IDENTITY;

CREATE TABLE produtor (
	id INTEGER(10) not null
	,nome VARCHAR(100) not null
	,sexo VARCHAR(10)
	,data_nascimento DATE
	,estado_civil VARCHAR(10)
	,cpf_cnpj VARCHAR(45) not null
	,rg_ie VARCHAR(45)
	,tipo_pessoa VARCHAR(10) not null
	,logradouro VARCHAR(45)
	,complemento VARCHAR(45)
	,bairro VARCHAR(100)
	,cidade VARCHAR(100)
	,uf VARCHAR(2)
	,pais VARCHAR(45)
	,cep VARCHAR(10)
	,telefone VARCHAR(20)
	,fax VARCHAR(20)
	,celular VARCHAR(20)
	,email VARCHAR(100) not null
	,facebook VARCHAR(45)
	,skype VARCHAR(45)
	,msn VARCHAR(100)
	,site VARCHAR(100)
	,valor_comissao DOUBLE(22)
	,salario DOUBLE(22)
	,creation_date TIMESTAMP
	,last_modification_author VARCHAR(200)
	,last_modification_date TIMESTAMP
	,creation_author VARCHAR(200)
	,description VARCHAR(45)
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY
	ON produtor (id);
CREATE UNIQUE INDEX IF NOT EXISTS produtor_unique_1
	ON produtor (cpf_cnpj);
ALTER TABLE produtor ALTER COLUMN id IDENTITY;

CREATE TABLE role (
	id INTEGER(10) not null
	,role_name VARCHAR(100) not null
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY
	ON role (id);
CREATE UNIQUE INDEX IF NOT EXISTS role_unique_1
	ON role (role_name);
ALTER TABLE role ALTER COLUMN id IDENTITY;

CREATE TABLE servicos (
	id_servicos INTEGER(10) not null
	,servico VARCHAR(45)
	,valor REAL(12)
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY
	ON servicos (id_servicos);
ALTER TABLE servicos ALTER COLUMN id_servicos IDENTITY;

CREATE TABLE tipo_equipamento (
	id INTEGER(10) not null
	,descricao VARCHAR(45) not null
);
CREATE UNIQUE INDEX IF NOT EXISTS PRIMARY
	ON tipo_equipamento (id);
CREATE UNIQUE INDEX IF NOT EXISTS descricao_UNIQUE
	ON tipo_equipamento (descricao);
ALTER TABLE tipo_equipamento ALTER COLUMN id IDENTITY;


ALTER TABLE account_has_role 
	ADD CONSTRAINT FK_ACCOUNT_HAS_ROLE_ROLE1
		FOREIGN KEY (ROLE_id)
			REFERENCES role (id);
ALTER TABLE account_has_role 
	ADD CONSTRAINT FK_ACCOUNT_HAS_ROLE_ACCOUNT1
		FOREIGN KEY (ACCOUNT_id)
			REFERENCES account (id);
ALTER TABLE cliente 
	ADD CONSTRAINT FK_CLIENTE_GRUPOCLIENTE1
		FOREIGN KEY (GrupoCliente_id)
			REFERENCES grupocliente (id);
ALTER TABLE equipamentos 
	ADD CONSTRAINT FK_EQUIPAMENTOS_TIPO_EQUIPAMENTO1
		FOREIGN KEY (tipo_equipamento_id)
			REFERENCES tipo_equipamento (id);
ALTER TABLE equipamentos_has_estudios 
	ADD CONSTRAINT FK_EQUIPAMENTOS_HAS_ESTUDIOS_ESTUDIOS1
		FOREIGN KEY (estudios_id)
			REFERENCES estudios (id);
ALTER TABLE equipamentos_has_estudios 
	ADD CONSTRAINT FK_EQUIPAMENTOS_HAS_ESTUDIOS_EQUIPAMENTOS1
		FOREIGN KEY (equipamentos_id)
			REFERENCES equipamentos (id);
ALTER TABLE grupocliente 
	ADD CONSTRAINT FK_GRUPOCLIENTE_CLIENTE1
		FOREIGN KEY (cliente_Representante_id)
			REFERENCES cliente (id);
ALTER TABLE itens_os 
	ADD CONSTRAINT FK_ITENS_OS_SERVICO
		FOREIGN KEY (servicos_id)
			REFERENCES servicos (id_servicos);
ALTER TABLE itens_os 
	ADD CONSTRAINT FK_ITENS_OS_OS
		FOREIGN KEY (os_id)
			REFERENCES os (id);
ALTER TABLE locacao 
	ADD CONSTRAINT FK_LOCACAO_ESTUDIOS
		FOREIGN KEY (estudios_id)
			REFERENCES estudios (id);
ALTER TABLE locacao 
	ADD CONSTRAINT LOCACAO_IBFK_1
		FOREIGN KEY (cliente_id)
			REFERENCES cliente (id);
ALTER TABLE os 
	ADD CONSTRAINT FK_OS_CLIENTE
		FOREIGN KEY (cliente_id)
			REFERENCES cliente (id);
ALTER TABLE os 
	ADD CONSTRAINT FK_OS_PRODUTOR1
		FOREIGN KEY (produtor_id)
			REFERENCES produtor (id);
