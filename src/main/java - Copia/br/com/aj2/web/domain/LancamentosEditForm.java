/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-jsf2-spring-conversation:src/main/java/domain/EditForm.e.vm.java
 */
package br.com.aj2.web.domain;

import javax.inject.Inject;
import javax.inject.Named;
import br.com.aj2.domain.Lancamentos;
import br.com.aj2.repository.LancamentosRepository;
import br.com.aj2.web.domain.support.GenericEditForm;
import br.com.aj2.web.faces.ConversationContextScoped;
import java.io.BufferedInputStream;
import java.io.ByteArrayInputStream;
import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import javax.activation.MimetypesFileTypeMap;
import javax.faces.context.FacesContext;
import javax.servlet.ServletContext;
import org.primefaces.event.FileUploadEvent;
import org.primefaces.model.DefaultStreamedContent;
import org.primefaces.model.StreamedContent;
import org.primefaces.model.UploadedFile;

/**
 * View Helper/Controller to edit {@link Lancamentos}.
 */
@Named
@ConversationContextScoped
public class LancamentosEditForm extends GenericEditForm<Lancamentos, Integer> {

    @Inject
    public LancamentosEditForm(LancamentosRepository lancamentosRepository) {
        super(lancamentosRepository);
    }

    /**
     * The entity to edit/view.
     */
    public Lancamentos getLancamentos() {
        return getEntity();
    }
    public void fileUpload(FileUploadEvent event) throws IOException{
        try{
            //Instância objetos
            String url = FacesContext.getCurrentInstance().getExternalContext().getRealPath("//resources//file//");  

            //Cria um arquivo UploadFile, para receber o arquivo do evento
            UploadedFile arq = event.getFile();
            //Transformar a imagem em bytes para salvar em banco de dados
            byte[] bimagem = event.getFile().getContents();

            InputStream in = new BufferedInputStream(arq.getInputstream());
            File file = new File(url + "//"+arq.getFileName());
            //O método file.getAbsolutePath() fornece o caminho do arquivo criado
            //Pode ser usado para ligar algum objeto do banco ao arquivo enviado
            String caminho = file.getAbsolutePath();
            //getLancamentos().setArquivoBinary(bimagem);
            getLancamentos().setDocumento(arq.getFileName());
            //getLancamentos().setArquivoContentType(arq.getContentType());
            FileOutputStream fout = new FileOutputStream(file);
            while(in.available() != 0)
            {
            fout.write(in.read());
            }
            fout.close();

        }
        catch(Exception ex){
            ex.printStackTrace();
        }
        
    }
    public StreamedContent getStreamedContent() {
        String url = FacesContext.getCurrentInstance().getExternalContext().getRealPath("//resources//file//");  
        File fileUrl = new File(url + "//"+getLancamentos().getDocumento());
        InputStream stream = ((ServletContext)FacesContext.getCurrentInstance().getExternalContext().getContext()).getResourceAsStream("//resources//file//"+getLancamentos().getDocumento());  
        DefaultStreamedContent file = new DefaultStreamedContent(stream, new MimetypesFileTypeMap().getContentType(fileUrl), getLancamentos().getDocumento());  
        return file;
    }
}
