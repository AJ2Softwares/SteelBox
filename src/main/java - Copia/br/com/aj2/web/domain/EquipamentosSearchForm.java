/*
 * (c) Copyright 2005-2013 JAXIO, http://www.jaxio.com
 * Source code generated by Celerio, a Jaxio product
 * Want to use Celerio within your company? email us at info@jaxio.com
 * Follow us on twitter: @springfuse
 * Template pack-jsf2-spring-conversation:src/main/java/domain/SearchForm.e.vm.java
 */
package br.com.aj2.web.domain;

import static br.com.aj2.dao.support.EntitySelector.newEntitySelector;
import static br.com.aj2.dao.support.PropertySelector.newPropertySelector;
import static br.com.aj2.dao.support.Ranges.RangeDate.newRangeDate;
import static br.com.aj2.dao.support.Ranges.RangeDouble.newRangeDouble;
import javax.inject.Named;
import br.com.aj2.dao.support.EntitySelector;
import br.com.aj2.dao.support.PropertySelector;
import br.com.aj2.dao.support.Ranges.RangeDate;
import br.com.aj2.dao.support.Ranges.RangeDouble;
import br.com.aj2.dao.support.SearchParameters;
import br.com.aj2.domain.Equipamentos;
import br.com.aj2.domain.Equipamentos_;
import br.com.aj2.domain.TipoEquipamento;
import br.com.aj2.web.domain.support.GenericSearchForm;
import br.com.aj2.web.faces.ConversationContextScoped;

/**
 * View Helper to search {@link Equipamentos}.
 * It exposes a {@link Equipamentos} instance so it can be used in search by Example query.
 */
@Named
@ConversationContextScoped
public class EquipamentosSearchForm extends GenericSearchForm<Equipamentos, Integer, EquipamentosSearchForm> {
    private static final long serialVersionUID = 1L;

    protected Equipamentos equipamentos = new Equipamentos();
    protected RangeDouble<Equipamentos> valorRange = newRangeDouble(Equipamentos_.valor);
    protected RangeDate<Equipamentos> dataAquisacaoRange = newRangeDate(Equipamentos_.dataAquisacao);
    protected PropertySelector<Equipamentos, String> descricaoSelector = newPropertySelector(Equipamentos_.descricao);
    protected PropertySelector<Equipamentos, Double> valorSelector = newPropertySelector(Equipamentos_.valor);
    protected PropertySelector<Equipamentos, Boolean> ativoSelector = newPropertySelector(Equipamentos_.ativo);
    protected EntitySelector<Equipamentos, TipoEquipamento, Integer> tipoEquipamentoSelector = newEntitySelector(Equipamentos_.tipoEquipamento);

    public Equipamentos getEquipamentos() {
        return equipamentos;
    }

    @Override
    protected Equipamentos getEntity() {
        return getEquipamentos();
    }

    @Override
    public EquipamentosSearchForm newInstance() {
        return new EquipamentosSearchForm();
    }

    @Override
    public SearchParameters toSearchParameters() {
        return new SearchParameters() //
                .anywhere() //
                .range(valorRange) //
                .range(dataAquisacaoRange) //
                .property(descricaoSelector) //
                .property(valorSelector) //
                .property(ativoSelector) //
                .entity(tipoEquipamentoSelector) //
        ;
    }

    @Override
    public void resetWithOther(EquipamentosSearchForm other) {
        this.equipamentos = other.getEquipamentos();
        this.valorRange = other.getValorRange();
        this.dataAquisacaoRange = other.getDataAquisacaoRange();
        this.descricaoSelector = other.getDescricaoSelector();
        this.valorSelector = other.getValorSelector();
        this.ativoSelector = other.getAtivoSelector();
        this.tipoEquipamentoSelector = other.getTipoEquipamentoSelector();
    }

    // Ranges
    public RangeDouble<Equipamentos> getValorRange() {
        return valorRange;
    }

    public RangeDate<Equipamentos> getDataAquisacaoRange() {
        return dataAquisacaoRange;
    }

    // Property selectors
    public PropertySelector<Equipamentos, String> getDescricaoSelector() {
        return descricaoSelector;
    }

    public PropertySelector<Equipamentos, Double> getValorSelector() {
        return valorSelector;
    }

    public PropertySelector<Equipamentos, Boolean> getAtivoSelector() {
        return ativoSelector;
    }

    // Relation selectors
    public EntitySelector<Equipamentos, TipoEquipamento, Integer> getTipoEquipamentoSelector() {
        return tipoEquipamentoSelector;
    }
}
